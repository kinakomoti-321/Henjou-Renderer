//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-33053471
// Cuda compilation tools, release 12.2, V12.2.128
// Based on NVVM 7.0.1
//

.version 8.2
.target sm_50
.address_size 64

	// .globl	__intersection__sphere
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.global .align 2 .b8 $str[30] = {116, 0, 121, 0, 112, 0, 101, 0, 32, 0, 61, 0, 61, 0, 32, 0, 83, 0, 80, 0, 72, 0, 69, 0, 82, 0, 69};
.global .align 2 .b8 $str$1[104] = {67, 0, 58, 0, 47, 0, 85, 0, 115, 0, 101, 0, 114, 0, 115, 0, 47, 0, 80, 0, 67, 0, 47, 0, 68, 0, 111, 0, 99, 0, 117, 0, 109, 0, 101, 0, 110, 0, 116, 0, 115, 0, 47, 0, 79, 0, 112, 0, 116, 0, 105, 0, 120, 0, 47, 0, 83, 0, 68, 0, 75, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 47, 0, 71, 0, 101, 0, 111, 0, 109, 0, 101, 0, 116, 0, 114, 0, 121, 0, 68, 0, 97, 0, 116, 0, 97, 0, 46, 0, 104};

.visible .entry __intersection__sphere()
{
	.reg .pred 	%p<17>;
	.reg .f32 	%f<94>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<15>;
	.loc	1 37 0


	.loc	1 39 5
	.loc	2 1355 5, function_name $L__info_string0, inlined_at 1 39 5
	// begin inline asm
	call (%rd2), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	.loc	1 41 5
	.loc	2 555 5, function_name $L__info_string1, inlined_at 1 41 5
	// begin inline asm
	call (%f40), _optix_get_world_ray_origin_x, ();
	// end inline asm
	.loc	2 556 5, function_name $L__info_string1, inlined_at 1 41 5
	// begin inline asm
	call (%f41), _optix_get_world_ray_origin_y, ();
	// end inline asm
	.loc	2 557 5, function_name $L__info_string1, inlined_at 1 41 5
	// begin inline asm
	call (%f42), _optix_get_world_ray_origin_z, ();
	// end inline asm
	.loc	1 42 5
	.loc	2 564 5, function_name $L__info_string2, inlined_at 1 42 5
	// begin inline asm
	call (%f43), _optix_get_world_ray_direction_x, ();
	// end inline asm
	.loc	2 565 5, function_name $L__info_string2, inlined_at 1 42 5
	// begin inline asm
	call (%f44), _optix_get_world_ray_direction_y, ();
	// end inline asm
	.loc	2 566 5, function_name $L__info_string2, inlined_at 1 42 5
	// begin inline asm
	call (%f45), _optix_get_world_ray_direction_z, ();
	// end inline asm
	.loc	1 43 5
	.loc	2 591 5, function_name $L__info_string3, inlined_at 1 43 5
	// begin inline asm
	call (%f46), _optix_get_ray_tmin, ();
	// end inline asm
	.loc	1 44 5
	.loc	2 598 5, function_name $L__info_string4, inlined_at 1 44 5
	// begin inline asm
	call (%f47), _optix_get_ray_tmax, ();
	// end inline asm
	.loc	1 46 5
	.loc	3 159 9, function_name $L__info_string5, inlined_at 1 46 5
	ld.u32 	%r1, [%rd2];
	setp.eq.s32 	%p4, %r1, 1;
	mov.pred 	%p16, -1;
	@%p4 bra 	$L__BB0_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str$1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r2, 159;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	.loc	1 49 5
	.loc	3 159 9, function_name $L__info_string5, inlined_at 1 49 5
	ld.u32 	%r3, [%rd2];
	.loc	3 159 9, function_name $L__info_string5, inlined_at 1 46 5
	setp.eq.s32 	%p16, %r3, 1;

$L__BB0_2:
	.loc	1 46 5
	.loc	4 435 3, function_name $L__info_string6, inlined_at 1 46 5
	ld.f32 	%f48, [%rd2+16];
	sub.ftz.f32 	%f9, %f40, %f48;
	ld.f32 	%f49, [%rd2+20];
	sub.ftz.f32 	%f10, %f41, %f49;
	ld.f32 	%f50, [%rd2+24];
	sub.ftz.f32 	%f11, %f42, %f50;
	.loc	1 47 5
	.loc	4 541 3, function_name $L__info_string7, inlined_at 1 47 5
	.loc	4 529 3, function_name $L__info_string8, inlined_at 4 541 3
	mul.ftz.f32 	%f51, %f44, %f44;
	fma.rn.ftz.f32 	%f52, %f43, %f43, %f51;
	fma.rn.ftz.f32 	%f53, %f45, %f45, %f52;
	.loc	1 47 5
	rsqrt.approx.ftz.f32 	%f12, %f53;
	.loc	1 48 5
	.loc	4 460 3, function_name $L__info_string9, inlined_at 1 48 5
	mul.ftz.f32 	%f13, %f43, %f12;
	mul.ftz.f32 	%f14, %f44, %f12;
	mul.ftz.f32 	%f15, %f45, %f12;
	.loc	3 159 9, function_name $L__info_string5, inlined_at 1 49 5
	@%p16 bra 	$L__BB0_4;

	mov.u64 	%rd9, $str;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str$1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r4, 159;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1

$L__BB0_4:
	.loc	1 51 5
	.loc	4 529 3, function_name $L__info_string8, inlined_at 1 51 5
	mul.ftz.f32 	%f54, %f10, %f14;
	fma.rn.ftz.f32 	%f55, %f9, %f13, %f54;
	fma.rn.ftz.f32 	%f90, %f11, %f15, %f55;
	.loc	1 52 5
	.loc	4 529 3, function_name $L__info_string8, inlined_at 1 52 5
	mul.ftz.f32 	%f56, %f10, %f10;
	fma.rn.ftz.f32 	%f57, %f9, %f9, %f56;
	fma.rn.ftz.f32 	%f58, %f11, %f11, %f57;
	.loc	1 49 5
	ld.f32 	%f17, [%rd2+28];
	.loc	1 52 5
	mul.ftz.f32 	%f18, %f17, %f17;
	sub.ftz.f32 	%f59, %f58, %f18;
	.loc	1 53 5
	mul.ftz.f32 	%f60, %f90, %f90;
	sub.ftz.f32 	%f19, %f60, %f59;
	.loc	1 54 5
	setp.leu.ftz.f32 	%p5, %f19, 0f00000000;
	.loc	1 80 9
	mov.f32 	%f92, 0f00000000;
	.loc	1 54 5
	@%p5 bra 	$L__BB0_13;

	.loc	1 56 9
	sqrt.approx.ftz.f32 	%f91, %f19;
	.loc	1 57 9
	neg.ftz.f32 	%f62, %f90;
	sub.ftz.f32 	%f21, %f62, %f91;
	.loc	1 61 9
	abs.ftz.f32 	%f22, %f21;
	mul.ftz.f32 	%f23, %f17, 0f41200000;
	setp.leu.ftz.f32 	%p6, %f22, %f23;
	.loc	1 63 9
	@%p6 bra 	$L__BB0_8;

	.loc	1 66 13
	.loc	4 414 3, function_name $L__info_string10, inlined_at 1 66 13
	fma.rn.ftz.f32 	%f64, %f13, %f21, %f9;
	fma.rn.ftz.f32 	%f65, %f14, %f21, %f10;
	fma.rn.ftz.f32 	%f66, %f15, %f21, %f11;
	.loc	1 67 13
	.loc	4 529 3, function_name $L__info_string8, inlined_at 1 67 13
	mul.ftz.f32 	%f67, %f14, %f65;
	fma.rn.ftz.f32 	%f68, %f13, %f64, %f67;
	fma.rn.ftz.f32 	%f90, %f15, %f66, %f68;
	.loc	1 68 13
	.loc	4 529 3, function_name $L__info_string8, inlined_at 1 68 13
	mul.ftz.f32 	%f69, %f65, %f65;
	fma.rn.ftz.f32 	%f70, %f64, %f64, %f69;
	fma.rn.ftz.f32 	%f71, %f66, %f66, %f70;
	.loc	1 68 13
	sub.ftz.f32 	%f72, %f71, %f18;
	.loc	1 69 13
	mul.ftz.f32 	%f73, %f90, %f90;
	sub.ftz.f32 	%f25, %f73, %f72;
	.loc	1 71 13
	setp.leu.ftz.f32 	%p7, %f25, 0f00000000;
	@%p7 bra 	$L__BB0_8;

	.loc	1 73 17
	sqrt.approx.ftz.f32 	%f91, %f25;
	.loc	1 74 17
	neg.ftz.f32 	%f74, %f90;
	sub.ftz.f32 	%f92, %f74, %f91;

$L__BB0_8:
	.loc	1 80 9
	add.ftz.f32 	%f31, %f21, %f92;
	mul.ftz.f32 	%f32, %f12, %f31;
	.loc	1 81 9
	setp.gt.ftz.f32 	%p8, %f32, %f46;
	setp.lt.ftz.f32 	%p9, %f32, %f47;
	and.pred  	%p10, %p8, %p9;
	@%p10 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;

$L__BB0_10:
	.loc	1 83 13
	.loc	4 414 3, function_name $L__info_string10, inlined_at 1 83 13
	fma.rn.ftz.f32 	%f76, %f13, %f31, %f9;
	fma.rn.ftz.f32 	%f77, %f14, %f31, %f10;
	fma.rn.ftz.f32 	%f78, %f15, %f31, %f11;
	.loc	1 83 13
	.loc	4 485 3, function_name $L__info_string11, inlined_at 1 83 13
	rcp.approx.ftz.f32 	%f93, %f17;
	.loc	4 486 3, function_name $L__info_string11, inlined_at 1 83 13
	.loc	4 460 3, function_name $L__info_string9, inlined_at 4 486 3
	mul.ftz.f32 	%f79, %f93, %f76;
	mul.ftz.f32 	%f80, %f93, %f77;
	mul.ftz.f32 	%f81, %f93, %f78;
	.loc	1 84 13
	mov.b32 	%r7, %f79;
	mov.b32 	%r8, %f80;
	mov.b32 	%r9, %f81;
	mov.b32 	%r10, %f17;
	.loc	1 84 13
	.loc	2 1069 5, function_name $L__info_string12, inlined_at 1 84 13
	mov.u32 	%r6, 0;
	// begin inline asm
	call (%r5), _optix_report_intersection_4, (%f32, %r6, %r7, %r8, %r9, %r10);
	// end inline asm
	.loc	2 1075 5, function_name $L__info_string12, inlined_at 1 84 13
	setp.ne.s32 	%p11, %r5, 0;
	.loc	1 88 9
	@%p11 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_11;

$L__BB0_9:
	.loc	1 92 13
	.loc	4 485 3, function_name $L__info_string11, inlined_at 1 92 13
	rcp.approx.ftz.f32 	%f93, %f17;

$L__BB0_11:
	.loc	1 61 9
	setp.gt.ftz.f32 	%p12, %f22, %f23;
	.loc	1 90 13
	selp.f32 	%f82, %f21, 0f00000000, %p12;
	sub.ftz.f32 	%f83, %f91, %f90;
	add.ftz.f32 	%f84, %f82, %f83;
	.loc	1 91 13
	mul.ftz.f32 	%f36, %f12, %f84;
	.loc	1 92 13
	.loc	4 414 3, function_name $L__info_string10, inlined_at 1 92 13
	fma.rn.ftz.f32 	%f85, %f13, %f84, %f9;
	fma.rn.ftz.f32 	%f86, %f14, %f84, %f10;
	fma.rn.ftz.f32 	%f87, %f15, %f84, %f11;
	.loc	4 486 3, function_name $L__info_string11, inlined_at 1 92 13
	.loc	4 460 3, function_name $L__info_string9, inlined_at 4 486 3
	mul.ftz.f32 	%f37, %f85, %f93;
	mul.ftz.f32 	%f38, %f86, %f93;
	mul.ftz.f32 	%f39, %f87, %f93;
	.loc	1 93 13
	setp.leu.ftz.f32 	%p13, %f36, %f46;
	setp.geu.ftz.f32 	%p14, %f36, %f47;
	or.pred  	%p15, %p13, %p14;
	@%p15 bra 	$L__BB0_13;

	.loc	1 94 17
	mov.b32 	%r13, %f37;
	mov.b32 	%r16, %f17;
	mov.b32 	%r15, %f39;
	mov.b32 	%r14, %f38;
	.loc	1 94 17
	.loc	2 1069 5, function_name $L__info_string12, inlined_at 1 94 17
	mov.u32 	%r12, 0;
	// begin inline asm
	call (%r11), _optix_report_intersection_4, (%f36, %r12, %r13, %r14, %r15, %r16);
	// end inline asm

$L__BB0_13:
	.loc	1 97 1
	ret;

}
	.file	1 "C:\\Users\\PC\\Documents\\Optix\\SDK\\cuda\\sphere.cu"
	.file	2 "C:\\ProgramData\\NVIDIA Corporation\\OptiX SDK 7.7.0\\include\\internal/optix_device_impl.h"
	.file	3 "C:/Users/PC/Documents/Optix/SDK\\cuda/GeometryData.h"
	.file	4 "C:/Users/PC/Documents/Optix/SDK\\sutil/vec_math.h"
	.section	.debug_str
	{
$L__info_string0:
.b8 95,90,78,51,57,95,73,78,84,69,82,78,65,76,95,50,101,56,98,56,99,98,50,95,57,95,115,112,104,101,114,101,95,99,117,95,55,56,52,48
.b8 97,48,48,99,50,50,111,112,116,105,120,71,101,116,83,98,116,68,97,116,97,80,111,105,110,116,101,114,69,118,0
$L__info_string1:
.b8 95,90,78,51,57,95,73,78,84,69,82,78,65,76,95,50,101,56,98,56,99,98,50,95,57,95,115,112,104,101,114,101,95,99,117,95,55,56,52,48
.b8 97,48,48,99,50,50,111,112,116,105,120,71,101,116,87,111,114,108,100,82,97,121,79,114,105,103,105,110,69,118,0
$L__info_string2:
.b8 95,90,78,51,57,95,73,78,84,69,82,78,65,76,95,50,101,56,98,56,99,98,50,95,57,95,115,112,104,101,114,101,95,99,117,95,55,56,52,48
.b8 97,48,48,99,50,53,111,112,116,105,120,71,101,116,87,111,114,108,100,82,97,121,68,105,114,101,99,116,105,111,110,69,118,0
$L__info_string3:
.b8 95,90,78,51,57,95,73,78,84,69,82,78,65,76,95,50,101,56,98,56,99,98,50,95,57,95,115,112,104,101,114,101,95,99,117,95,55,56,52,48
.b8 97,48,48,99,49,53,111,112,116,105,120,71,101,116,82,97,121,84,109,105,110,69,118,0
$L__info_string4:
.b8 95,90,78,51,57,95,73,78,84,69,82,78,65,76,95,50,101,56,98,56,99,98,50,95,57,95,115,112,104,101,114,101,95,99,117,95,55,56,52,48
.b8 97,48,48,99,49,53,111,112,116,105,120,71,101,116,82,97,121,84,109,97,120,69,118,0
$L__info_string5:
.b8 95,90,78,75,49,50,71,101,111,109,101,116,114,121,68,97,116,97,57,103,101,116,83,112,104,101,114,101,69,118,0
$L__info_string6:
.b8 95,90,109,105,82,75,54,102,108,111,97,116,51,83,49,95,0
$L__info_string7:
.b8 95,90,54,108,101,110,103,116,104,82,75,54,102,108,111,97,116,51,0
$L__info_string8:
.b8 95,90,51,100,111,116,82,75,54,102,108,111,97,116,51,83,49,95,0
$L__info_string9:
.b8 95,90,109,108,82,75,54,102,108,111,97,116,51,102,0
$L__info_string10:
.b8 95,90,112,108,82,75,54,102,108,111,97,116,51,83,49,95,0
$L__info_string11:
.b8 95,90,100,118,82,75,54,102,108,111,97,116,51,102,0
$L__info_string12:
.b8 95,90,78,51,57,95,73,78,84,69,82,78,65,76,95,50,101,56,98,56,99,98,50,95,57,95,115,112,104,101,114,101,95,99,117,95,55,56,52,48
.b8 97,48,48,99,50,51,111,112,116,105,120,82,101,112,111,114,116,73,110,116,101,114,115,101,99,116,105,111,110,69,102,106,106,106,106,106,0

	}

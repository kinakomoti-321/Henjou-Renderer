//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-33053471
// Cuda compilation tools, release 12.2, V12.2.128
// Based on NVVM 7.0.1
//

.version 8.2
.target sm_50
.address_size 64

	// .globl	__intersection__parallelogram
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 8 .b8 params[128];
.global .align 2 .b8 $str[42] = {116, 0, 121, 0, 112, 0, 101, 0, 32, 0, 61, 0, 61, 0, 32, 0, 83, 0, 80, 0, 72, 0, 69, 0, 82, 0, 69, 0, 95, 0, 83, 0, 72, 0, 69, 0, 76, 0, 76};
.global .align 2 .b8 $str$1[104] = {67, 0, 58, 0, 47, 0, 85, 0, 115, 0, 101, 0, 114, 0, 115, 0, 47, 0, 80, 0, 67, 0, 47, 0, 68, 0, 111, 0, 99, 0, 117, 0, 109, 0, 101, 0, 110, 0, 116, 0, 115, 0, 47, 0, 79, 0, 112, 0, 116, 0, 105, 0, 120, 0, 47, 0, 83, 0, 68, 0, 75, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 47, 0, 71, 0, 101, 0, 111, 0, 109, 0, 101, 0, 116, 0, 114, 0, 121, 0, 68, 0, 97, 0, 116, 0, 97, 0, 46, 0, 104};
.global .align 2 .b8 $str$2[44] = {116, 0, 121, 0, 112, 0, 101, 0, 32, 0, 61, 0, 61, 0, 32, 0, 80, 0, 65, 0, 82, 0, 65, 0, 76, 0, 76, 0, 69, 0, 76, 0, 79, 0, 71, 0, 82, 0, 65, 0, 77};

.visible .entry __intersection__parallelogram()
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<53>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<9>;
	.loc	1 38 0


	.loc	1 40 5
	.loc	2 1355 5, function_name $L__info_string0, inlined_at 1 40 5
	// begin inline asm
	call (%rd2), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	.loc	1 41 5
	.loc	3 185 9, function_name $L__info_string1, inlined_at 1 41 5
	ld.u32 	%r1, [%rd2];
	setp.eq.s32 	%p1, %r1, 3;
	@%p1 bra 	$L__BB0_2;

	mov.u64 	%rd3, $str$2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str$1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r2, 185;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0

$L__BB0_2:
	.loc	1 43 5
	.loc	2 555 5, function_name $L__info_string2, inlined_at 1 43 5
	// begin inline asm
	call (%f17), _optix_get_world_ray_origin_x, ();
	// end inline asm
	.loc	2 556 5, function_name $L__info_string2, inlined_at 1 43 5
	// begin inline asm
	call (%f18), _optix_get_world_ray_origin_y, ();
	// end inline asm
	.loc	2 557 5, function_name $L__info_string2, inlined_at 1 43 5
	// begin inline asm
	call (%f19), _optix_get_world_ray_origin_z, ();
	// end inline asm
	.loc	1 44 5
	.loc	2 564 5, function_name $L__info_string3, inlined_at 1 44 5
	// begin inline asm
	call (%f20), _optix_get_world_ray_direction_x, ();
	// end inline asm
	.loc	2 565 5, function_name $L__info_string3, inlined_at 1 44 5
	// begin inline asm
	call (%f21), _optix_get_world_ray_direction_y, ();
	// end inline asm
	.loc	2 566 5, function_name $L__info_string3, inlined_at 1 44 5
	// begin inline asm
	call (%f22), _optix_get_world_ray_direction_z, ();
	// end inline asm
	.loc	1 45 5
	.loc	2 591 5, function_name $L__info_string4, inlined_at 1 45 5
	// begin inline asm
	call (%f23), _optix_get_ray_tmin, ();
	// end inline asm
	.loc	1 45 5
	.loc	2 598 5, function_name $L__info_string5, inlined_at 1 45 5
	// begin inline asm
	call (%f24), _optix_get_ray_tmax, ();
	// end inline asm
	.loc	1 47 5
	.loc	4 2569 66, function_name $L__info_string6, inlined_at 1 47 5
	ld.v4.f32 	{%f25, %f26, %f27, %f28}, [%rd2+16];
	.loc	1 48 5
	.loc	4 529 3, function_name $L__info_string7, inlined_at 1 48 5
	mul.ftz.f32 	%f29, %f21, %f26;
	fma.rn.ftz.f32 	%f30, %f20, %f25, %f29;
	fma.rn.ftz.f32 	%f31, %f22, %f27, %f30;
	.loc	1 49 5
	.loc	4 529 3, function_name $L__info_string7, inlined_at 1 49 5
	mul.ftz.f32 	%f32, %f18, %f26;
	fma.rn.ftz.f32 	%f33, %f17, %f25, %f32;
	fma.rn.ftz.f32 	%f34, %f19, %f27, %f33;
	.loc	1 49 5
	sub.ftz.f32 	%f35, %f28, %f34;
	div.approx.ftz.f32 	%f11, %f35, %f31;
	.loc	1 50 5
	setp.leu.ftz.f32 	%p2, %f11, %f23;
	setp.geu.ftz.f32 	%p3, %f11, %f24;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	$L__BB0_6;

	.loc	1 52 9
	.loc	4 414 3, function_name $L__info_string8, inlined_at 1 52 9
	fma.rn.ftz.f32 	%f36, %f20, %f11, %f17;
	fma.rn.ftz.f32 	%f37, %f21, %f11, %f18;
	fma.rn.ftz.f32 	%f38, %f22, %f11, %f19;
	.loc	1 53 9
	.loc	4 435 3, function_name $L__info_string9, inlined_at 1 53 9
	ld.f32 	%f39, [%rd2+56];
	sub.ftz.f32 	%f12, %f36, %f39;
	ld.f32 	%f40, [%rd2+60];
	sub.ftz.f32 	%f13, %f37, %f40;
	ld.f32 	%f41, [%rd2+64];
	sub.ftz.f32 	%f14, %f38, %f41;
	.loc	1 54 9
	.loc	4 529 3, function_name $L__info_string7, inlined_at 1 54 9
	ld.f32 	%f42, [%rd2+32];
	ld.f32 	%f43, [%rd2+36];
	mul.ftz.f32 	%f44, %f43, %f13;
	fma.rn.ftz.f32 	%f45, %f42, %f12, %f44;
	ld.f32 	%f46, [%rd2+40];
	fma.rn.ftz.f32 	%f15, %f46, %f14, %f45;
	.loc	1 55 9
	setp.ltu.ftz.f32 	%p5, %f15, 0f00000000;
	setp.gtu.ftz.f32 	%p6, %f15, 0f3F800000;
	or.pred  	%p7, %p5, %p6;
	@%p7 bra 	$L__BB0_6;

	.loc	1 57 13
	.loc	4 529 3, function_name $L__info_string7, inlined_at 1 57 13
	ld.f32 	%f47, [%rd2+44];
	ld.f32 	%f48, [%rd2+48];
	mul.ftz.f32 	%f49, %f13, %f48;
	fma.rn.ftz.f32 	%f50, %f12, %f47, %f49;
	ld.f32 	%f51, [%rd2+52];
	fma.rn.ftz.f32 	%f16, %f14, %f51, %f50;
	.loc	1 58 13
	setp.ltu.ftz.f32 	%p8, %f16, 0f00000000;
	setp.gtu.ftz.f32 	%p9, %f16, 0f3F800000;
	or.pred  	%p10, %p8, %p9;
	@%p10 bra 	$L__BB0_6;

	.loc	1 60 17
	mov.b32 	%r8, %f15;
	.loc	4 2569 66, function_name $L__info_string6, inlined_at 1 47 5
	mov.u32 	%r4, 0;
	.loc	1 47 5
	mov.b32 	%r5, %f25;
	mov.b32 	%r6, %f26;
	mov.b32 	%r7, %f27;
	.loc	1 60 17
	mov.b32 	%r9, %f16;
	.loc	1 60 17
	.loc	2 1087 5, function_name $L__info_string10, inlined_at 1 60 17
	// begin inline asm
	call (%r3), _optix_report_intersection_5, (%f11, %r4, %r5, %r6, %r7, %r8, %r9);
	// end inline asm

$L__BB0_6:
	.loc	1 64 1
	ret;

}
	// .globl	__intersection__sphere_shell
.visible .entry __intersection__sphere_shell()
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<108>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<9>;
	.loc	1 67 0


	.loc	1 69 5
	.loc	2 1355 5, function_name $L__info_string0, inlined_at 1 69 5
	// begin inline asm
	call (%rd2), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	.loc	1 70 5
	.loc	3 172 9, function_name $L__info_string11, inlined_at 1 70 5
	ld.u32 	%r1, [%rd2];
	setp.eq.s32 	%p1, %r1, 2;
	@%p1 bra 	$L__BB1_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str$1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r2, 172;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1

$L__BB1_2:
	.loc	1 72 5
	.loc	2 555 5, function_name $L__info_string2, inlined_at 1 72 5
	// begin inline asm
	call (%f30), _optix_get_world_ray_origin_x, ();
	// end inline asm
	.loc	2 556 5, function_name $L__info_string2, inlined_at 1 72 5
	// begin inline asm
	call (%f31), _optix_get_world_ray_origin_y, ();
	// end inline asm
	.loc	2 557 5, function_name $L__info_string2, inlined_at 1 72 5
	// begin inline asm
	call (%f32), _optix_get_world_ray_origin_z, ();
	// end inline asm
	.loc	1 73 5
	.loc	2 564 5, function_name $L__info_string3, inlined_at 1 73 5
	// begin inline asm
	call (%f33), _optix_get_world_ray_direction_x, ();
	// end inline asm
	.loc	2 565 5, function_name $L__info_string3, inlined_at 1 73 5
	// begin inline asm
	call (%f34), _optix_get_world_ray_direction_y, ();
	// end inline asm
	.loc	2 566 5, function_name $L__info_string3, inlined_at 1 73 5
	// begin inline asm
	call (%f35), _optix_get_world_ray_direction_z, ();
	// end inline asm
	.loc	1 74 5
	.loc	2 591 5, function_name $L__info_string4, inlined_at 1 74 5
	// begin inline asm
	call (%f36), _optix_get_ray_tmin, ();
	// end inline asm
	.loc	1 74 5
	.loc	2 598 5, function_name $L__info_string5, inlined_at 1 74 5
	// begin inline asm
	call (%f37), _optix_get_ray_tmax, ();
	// end inline asm
	.loc	1 76 5
	.loc	4 435 3, function_name $L__info_string9, inlined_at 1 76 5
	ld.f32 	%f38, [%rd2+16];
	sub.ftz.f32 	%f3, %f30, %f38;
	ld.f32 	%f39, [%rd2+20];
	sub.ftz.f32 	%f4, %f31, %f39;
	ld.f32 	%f40, [%rd2+24];
	sub.ftz.f32 	%f5, %f32, %f40;
	.loc	1 77 5
	.loc	4 541 3, function_name $L__info_string12, inlined_at 1 77 5
	.loc	4 529 3, function_name $L__info_string7, inlined_at 4 541 3
	mul.ftz.f32 	%f41, %f34, %f34;
	fma.rn.ftz.f32 	%f42, %f33, %f33, %f41;
	fma.rn.ftz.f32 	%f43, %f35, %f35, %f42;
	.loc	1 77 5
	rsqrt.approx.ftz.f32 	%f6, %f43;
	.loc	1 78 5
	.loc	4 460 3, function_name $L__info_string13, inlined_at 1 78 5
	mul.ftz.f32 	%f7, %f33, %f6;
	mul.ftz.f32 	%f8, %f34, %f6;
	mul.ftz.f32 	%f9, %f35, %f6;
	.loc	1 80 5
	.loc	4 529 3, function_name $L__info_string7, inlined_at 1 80 5
	mul.ftz.f32 	%f44, %f4, %f8;
	fma.rn.ftz.f32 	%f45, %f3, %f7, %f44;
	fma.rn.ftz.f32 	%f10, %f5, %f9, %f45;
	.loc	1 80 5
	mul.ftz.f32 	%f11, %f10, %f10;
	.loc	1 81 5
	.loc	4 529 3, function_name $L__info_string7, inlined_at 1 81 5
	mul.ftz.f32 	%f46, %f4, %f4;
	fma.rn.ftz.f32 	%f47, %f3, %f3, %f46;
	fma.rn.ftz.f32 	%f12, %f5, %f5, %f47;
	.loc	1 82 5
	ld.f32 	%f13, [%rd2+28];
	ld.f32 	%f14, [%rd2+32];
	.loc	1 83 5
	mul.ftz.f32 	%f15, %f14, %f14;
	.loc	1 86 5
	ld.const.f32 	%f16, [params+36];
	add.ftz.f32 	%f48, %f15, %f16;
	setp.gt.ftz.f32 	%p2, %f12, %f48;
	@%p2 bra 	$L__BB1_14;
	bra.uni 	$L__BB1_3;

$L__BB1_14:
	.loc	1 88 9
	sub.ftz.f32 	%f92, %f12, %f11;
	sub.ftz.f32 	%f93, %f15, %f16;
	setp.geu.ftz.f32 	%p12, %f92, %f93;
	@%p12 bra 	$L__BB1_17;

	.loc	1 90 13
	sub.ftz.f32 	%f94, %f12, %f15;
	.loc	1 91 13
	sub.ftz.f32 	%f29, %f11, %f94;
	.loc	1 92 13
	setp.leu.ftz.f32 	%p13, %f29, 0f00000000;
	@%p13 bra 	$L__BB1_17;

	.loc	1 94 17
	neg.ftz.f32 	%f96, %f10;
	sqrt.approx.ftz.f32 	%f97, %f29;
	sub.ftz.f32 	%f98, %f96, %f97;
	.loc	1 95 17
	.loc	4 414 3, function_name $L__info_string8, inlined_at 1 95 17
	fma.rn.ftz.f32 	%f99, %f7, %f98, %f3;
	fma.rn.ftz.f32 	%f100, %f8, %f98, %f4;
	fma.rn.ftz.f32 	%f101, %f9, %f98, %f5;
	.loc	1 95 17
	.loc	4 485 3, function_name $L__info_string14, inlined_at 1 95 17
	rcp.approx.ftz.f32 	%f102, %f14;
	.loc	4 486 3, function_name $L__info_string14, inlined_at 1 95 17
	.loc	4 460 3, function_name $L__info_string13, inlined_at 4 486 3
	mul.ftz.f32 	%f103, %f102, %f99;
	mul.ftz.f32 	%f104, %f102, %f100;
	mul.ftz.f32 	%f105, %f102, %f101;
	.loc	1 95 17
	mov.b32 	%r25, %f103;
	mov.b32 	%r26, %f104;
	mov.b32 	%r27, %f105;
	.loc	1 96 17
	mul.ftz.f32 	%f95, %f6, %f98;
	.loc	1 96 17
	.loc	2 1052 5, function_name $L__info_string15, inlined_at 1 96 17
	mov.u32 	%r24, 1;
	// begin inline asm
	call (%r23), _optix_report_intersection_3, (%f95, %r24, %r25, %r26, %r27);
	// end inline asm
	bra.uni 	$L__BB1_17;

$L__BB1_3:
	.loc	1 83 5
	mul.ftz.f32 	%f49, %f13, %f13;
	.loc	1 103 9
	sub.ftz.f32 	%f50, %f12, %f49;
	.loc	1 104 9
	sub.ftz.f32 	%f17, %f11, %f50;
	.loc	1 105 9
	setp.gt.ftz.f32 	%p3, %f17, 0f00000000;
	@%p3 bra 	$L__BB1_7;
	bra.uni 	$L__BB1_4;

$L__BB1_7:
	.loc	1 107 13
	neg.ftz.f32 	%f62, %f10;
	sqrt.approx.ftz.f32 	%f21, %f17;
	sub.ftz.f32 	%f22, %f62, %f21;
	.loc	1 109 13
	mul.ftz.f32 	%f23, %f6, %f22;
	setp.gt.ftz.f32 	%p5, %f23, %f36;
	setp.lt.ftz.f32 	%p6, %f23, %f37;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	$L__BB1_13;
	bra.uni 	$L__BB1_8;

$L__BB1_13:
	.loc	1 111 17
	.loc	4 414 3, function_name $L__info_string8, inlined_at 1 111 17
	fma.rn.ftz.f32 	%f84, %f7, %f22, %f3;
	fma.rn.ftz.f32 	%f85, %f8, %f22, %f4;
	fma.rn.ftz.f32 	%f86, %f9, %f22, %f5;
	.loc	1 111 17
	.loc	4 485 3, function_name $L__info_string14, inlined_at 1 111 17
	mov.f32 	%f87, 0fBF800000;
	div.full.ftz.f32 	%f88, %f87, %f13;
	.loc	4 486 3, function_name $L__info_string14, inlined_at 1 111 17
	.loc	4 460 3, function_name $L__info_string13, inlined_at 4 486 3
	mul.ftz.f32 	%f89, %f88, %f84;
	mul.ftz.f32 	%f90, %f88, %f85;
	mul.ftz.f32 	%f91, %f88, %f86;
	.loc	1 111 17
	mov.b32 	%r20, %f89;
	mov.b32 	%r21, %f90;
	mov.b32 	%r22, %f91;
	.loc	1 112 17
	.loc	2 1052 5, function_name $L__info_string15, inlined_at 1 112 17
	mov.u32 	%r19, 4;
	// begin inline asm
	call (%r18), _optix_report_intersection_3, (%f23, %r19, %r20, %r21, %r22);
	// end inline asm
	.loc	1 112 17
	bra.uni 	$L__BB1_17;

$L__BB1_4:
	.loc	1 137 13
	sub.ftz.f32 	%f52, %f12, %f15;
	.loc	1 138 13
	sub.ftz.f32 	%f18, %f11, %f52;
	.loc	1 139 13
	setp.leu.ftz.f32 	%p4, %f18, 0f00000000;
	mov.f32 	%f106, 0f00000000;
	@%p4 bra 	$L__BB1_6;

	sqrt.approx.ftz.f32 	%f106, %f18;

$L__BB1_6:
	sub.ftz.f32 	%f54, %f106, %f10;
	.loc	1 140 13
	.loc	4 414 3, function_name $L__info_string8, inlined_at 1 140 13
	fma.rn.ftz.f32 	%f55, %f7, %f54, %f3;
	fma.rn.ftz.f32 	%f56, %f8, %f54, %f4;
	fma.rn.ftz.f32 	%f57, %f9, %f54, %f5;
	.loc	1 140 13
	.loc	4 485 3, function_name $L__info_string14, inlined_at 1 140 13
	rcp.approx.ftz.f32 	%f58, %f14;
	.loc	4 486 3, function_name $L__info_string14, inlined_at 1 140 13
	.loc	4 460 3, function_name $L__info_string13, inlined_at 4 486 3
	mul.ftz.f32 	%f59, %f58, %f55;
	mul.ftz.f32 	%f60, %f58, %f56;
	mul.ftz.f32 	%f61, %f58, %f57;
	.loc	1 140 13
	mov.b32 	%r5, %f59;
	mov.b32 	%r6, %f60;
	mov.b32 	%r7, %f61;
	.loc	1 141 13
	mul.ftz.f32 	%f53, %f6, %f54;
	.loc	1 141 13
	.loc	2 1052 5, function_name $L__info_string15, inlined_at 1 141 13
	mov.u32 	%r4, 2;
	// begin inline asm
	call (%r3), _optix_report_intersection_3, (%f53, %r4, %r5, %r6, %r7);
	// end inline asm

$L__BB1_17:
	.loc	1 144 1
	ret;

$L__BB1_8:
	.loc	1 117 17
	sub.ftz.f32 	%f24, %f21, %f10;
	.loc	1 118 17
	mul.ftz.f32 	%f25, %f6, %f24;
	setp.gt.ftz.f32 	%p8, %f25, %f36;
	setp.lt.ftz.f32 	%p9, %f25, %f37;
	and.pred  	%p10, %p8, %p9;
	@%p10 bra 	$L__BB1_12;
	bra.uni 	$L__BB1_9;

$L__BB1_12:
	.loc	1 120 21
	.loc	4 414 3, function_name $L__info_string8, inlined_at 1 120 21
	fma.rn.ftz.f32 	%f75, %f7, %f24, %f3;
	fma.rn.ftz.f32 	%f76, %f8, %f24, %f4;
	fma.rn.ftz.f32 	%f77, %f9, %f24, %f5;
	.loc	1 120 21
	.loc	4 485 3, function_name $L__info_string14, inlined_at 1 120 21
	mov.f32 	%f78, 0fBF800000;
	div.full.ftz.f32 	%f79, %f78, %f13;
	.loc	4 486 3, function_name $L__info_string14, inlined_at 1 120 21
	.loc	4 460 3, function_name $L__info_string13, inlined_at 4 486 3
	mul.ftz.f32 	%f80, %f79, %f75;
	mul.ftz.f32 	%f81, %f79, %f76;
	mul.ftz.f32 	%f82, %f79, %f77;
	.loc	1 120 21
	mov.b32 	%r15, %f80;
	mov.b32 	%r16, %f81;
	mov.b32 	%r17, %f82;
	.loc	1 121 21
	.loc	2 1052 5, function_name $L__info_string15, inlined_at 1 121 21
	mov.u32 	%r14, 8;
	// begin inline asm
	call (%r13), _optix_report_intersection_3, (%f25, %r14, %r15, %r16, %r17);
	// end inline asm
	.loc	1 121 21
	bra.uni 	$L__BB1_17;

$L__BB1_9:
	.loc	1 126 21
	sub.ftz.f32 	%f64, %f12, %f15;
	.loc	1 127 21
	sub.ftz.f32 	%f26, %f11, %f64;
	.loc	1 128 21
	setp.leu.ftz.f32 	%p11, %f26, 0f00000000;
	mov.f32 	%f107, 0f00000000;
	@%p11 bra 	$L__BB1_11;

	sqrt.approx.ftz.f32 	%f107, %f26;

$L__BB1_11:
	sub.ftz.f32 	%f66, %f107, %f10;
	.loc	1 129 21
	.loc	4 414 3, function_name $L__info_string8, inlined_at 1 129 21
	fma.rn.ftz.f32 	%f67, %f7, %f66, %f3;
	fma.rn.ftz.f32 	%f68, %f8, %f66, %f4;
	fma.rn.ftz.f32 	%f69, %f9, %f66, %f5;
	.loc	1 129 21
	.loc	4 485 3, function_name $L__info_string14, inlined_at 1 129 21
	rcp.approx.ftz.f32 	%f70, %f14;
	.loc	4 486 3, function_name $L__info_string14, inlined_at 1 129 21
	.loc	4 460 3, function_name $L__info_string13, inlined_at 4 486 3
	mul.ftz.f32 	%f71, %f70, %f67;
	mul.ftz.f32 	%f72, %f70, %f68;
	mul.ftz.f32 	%f73, %f70, %f69;
	.loc	1 129 21
	mov.b32 	%r10, %f71;
	mov.b32 	%r11, %f72;
	mov.b32 	%r12, %f73;
	.loc	1 130 21
	mul.ftz.f32 	%f65, %f6, %f66;
	.loc	1 130 21
	.loc	2 1052 5, function_name $L__info_string15, inlined_at 1 130 21
	mov.u32 	%r9, 2;
	// begin inline asm
	call (%r8), _optix_report_intersection_3, (%f65, %r9, %r10, %r11, %r12);
	// end inline asm
	.loc	1 130 21
	bra.uni 	$L__BB1_17;

}
	.file	1 "C:\\Users\\PC\\Documents\\Optix\\SDK\\cuda\\geometry.cu"
	.file	2 "C:\\ProgramData\\NVIDIA Corporation\\OptiX SDK 7.7.0\\include\\internal/optix_device_impl.h"
	.file	3 "C:/Users/PC/Documents/Optix/SDK\\cuda/GeometryData.h"
	.file	4 "C:/Users/PC/Documents/Optix/SDK\\sutil/vec_math.h"
	.section	.debug_str
	{
$L__info_string0:
.b8 95,90,78,52,50,95,73,78,84,69,82,78,65,76,95,98,100,101,97,50,101,49,53,95,49,49,95,103,101,111,109,101,116,114,121,95,99,117,95,97
.b8 50,57,98,55,102,48,54,50,50,111,112,116,105,120,71,101,116,83,98,116,68,97,116,97,80,111,105,110,116,101,114,69,118,0
$L__info_string1:
.b8 95,90,78,75,49,50,71,101,111,109,101,116,114,121,68,97,116,97,49,54,103,101,116,80,97,114,97,108,108,101,108,111,103,114,97,109,69,118,0
$L__info_string2:
.b8 95,90,78,52,50,95,73,78,84,69,82,78,65,76,95,98,100,101,97,50,101,49,53,95,49,49,95,103,101,111,109,101,116,114,121,95,99,117,95,97
.b8 50,57,98,55,102,48,54,50,50,111,112,116,105,120,71,101,116,87,111,114,108,100,82,97,121,79,114,105,103,105,110,69,118,0
$L__info_string3:
.b8 95,90,78,52,50,95,73,78,84,69,82,78,65,76,95,98,100,101,97,50,101,49,53,95,49,49,95,103,101,111,109,101,116,114,121,95,99,117,95,97
.b8 50,57,98,55,102,48,54,50,53,111,112,116,105,120,71,101,116,87,111,114,108,100,82,97,121,68,105,114,101,99,116,105,111,110,69,118,0
$L__info_string4:
.b8 95,90,78,52,50,95,73,78,84,69,82,78,65,76,95,98,100,101,97,50,101,49,53,95,49,49,95,103,101,111,109,101,116,114,121,95,99,117,95,97
.b8 50,57,98,55,102,48,54,49,53,111,112,116,105,120,71,101,116,82,97,121,84,109,105,110,69,118,0
$L__info_string5:
.b8 95,90,78,52,50,95,73,78,84,69,82,78,65,76,95,98,100,101,97,50,101,49,53,95,49,49,95,103,101,111,109,101,116,114,121,95,99,117,95,97
.b8 50,57,98,55,102,48,54,49,53,111,112,116,105,120,71,101,116,82,97,121,84,109,97,120,69,118,0
$L__info_string6:
.b8 95,90,49,49,109,97,107,101,95,102,108,111,97,116,51,82,75,54,102,108,111,97,116,52,0
$L__info_string7:
.b8 95,90,51,100,111,116,82,75,54,102,108,111,97,116,51,83,49,95,0
$L__info_string8:
.b8 95,90,112,108,82,75,54,102,108,111,97,116,51,83,49,95,0
$L__info_string9:
.b8 95,90,109,105,82,75,54,102,108,111,97,116,51,83,49,95,0
$L__info_string10:
.b8 95,90,78,52,50,95,73,78,84,69,82,78,65,76,95,98,100,101,97,50,101,49,53,95,49,49,95,103,101,111,109,101,116,114,121,95,99,117,95,97
.b8 50,57,98,55,102,48,54,50,51,111,112,116,105,120,82,101,112,111,114,116,73,110,116,101,114,115,101,99,116,105,111,110,69,102,106,106,106,106,106,106
.b8 0
$L__info_string11:
.b8 95,90,78,75,49,50,71,101,111,109,101,116,114,121,68,97,116,97,49,52,103,101,116,83,112,104,101,114,101,83,104,101,108,108,69,118,0
$L__info_string12:
.b8 95,90,54,108,101,110,103,116,104,82,75,54,102,108,111,97,116,51,0
$L__info_string13:
.b8 95,90,109,108,82,75,54,102,108,111,97,116,51,102,0
$L__info_string14:
.b8 95,90,100,118,82,75,54,102,108,111,97,116,51,102,0
$L__info_string15:
.b8 95,90,78,52,50,95,73,78,84,69,82,78,65,76,95,98,100,101,97,50,101,49,53,95,49,49,95,103,101,111,109,101,116,114,121,95,99,117,95,97
.b8 50,57,98,55,102,48,54,50,51,111,112,116,105,120,82,101,112,111,114,116,73,110,116,101,114,115,101,99,116,105,111,110,69,102,106,106,106,106,0

	}
